% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazytensor_operations.R
\name{arithmetic.power.LazyTensor}
\alias{arithmetic.power.LazyTensor}
\alias{^.LazyTensor}
\alias{^.lazyTensor}
\title{Element-wise power operation}
\usage{
\method{^}{LazyTensor}(x, y)
}
\arguments{
\item{x, y}{a \code{LazyTensor}, a \code{ComplexLazyTensor}, a vector of numeric values,
or a scalar value.}
}
\value{
An object of class \code{LazyTensor}.
}
\description{
Symbolic power binary operation for \code{LazyTensor} objects.
}
\details{
If \code{x} or \code{y} is a \code{LazyTensor}, \code{x^y} returns a \code{LazyTensor}
that encodes, symbolically, the element-wise value of \code{x} to the power
of \code{y}.
(In case one of the arguments is a vector or a scalar, it is first converted
to \code{LazyTensor}).

\strong{Note}:
\itemize{
\item if \code{y = 2}, \code{x^y} relies on the \code{"Square"} \code{KeOps} operation;
\item if \code{y = 0.5}, \code{x^y} uses on the \code{"Sqrt"} \code{KeOps} operation;
\item if \code{y = -0.5}, \code{x^y} uses on the \code{"Rsqrt"} \code{KeOps} operation.
}
}
\examples{
\dontrun{
x <- matrix(runif(150 * 3), 150, 3) # arbitrary R matrix, 150 rows, 3 columns
y <- matrix(runif(250 * 3), 250, 3) # arbitrary R matrix, 250 rows, 3 columns
x_i <- LazyTensor(x, index = 'i')   # creating LazyTensor from matrix x, 
                                    # indexed by 'i'
y_j <- LazyTensor(y, index = 'j')   # creating LazyTensor from matrix y, 
                                    # indexed by 'j'
x_pow_y <- x_i^y_j                  # symbolic matrix
}
}
\author{
Chloe Serre-Combe, Amelie Vernay
}
